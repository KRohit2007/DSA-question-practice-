Q1. Complete the function printNumber which takes an integer input from the user and prints it on the screen.


In C++ Language

#include <iostream>
using namespace std;
void printNumber() {
    int num;
    cin >> num;
    cout << num;
}
int main() {
    printNumber();
    return 0;
}



In python language -


def printNumber():
    num = int(input())
    print(num)
printNumber()



Q2.Given an integer age, print on the screen:

Adult if age >= 18
Teen if age < 18
Do not change the case of any letter in "Adult" and "Teen" while printing the answer.

In C++ language

#include <iostream>
using namespace std;
int main() {
    int age;
    cin >> age;
    if (age >= 18)
        cout << "Adult";
    else
        cout << "Teen";
}

In python language-
age = int(input())
if age >= 18:
    print("Adult")
else:
    print("Teen")




Q3. Given marks of a student, print on the screen:

Grade A if marks >= 90
Grade B if marks >= 70
Grade C if marks >= 50
Grade D if marks >= 35
Fail, otherwise.

python---
marks = int(input())
if marks >= 90:
    print("Grade A")
elif marks >= 70:
    print("Grade B")
elif marks >= 50:
    print("Grade C")
elif marks >= 35:
    print("Grade D")
else:
    print("Fail")

c++---
#include <iostream>
using namespace std;
int main() {
    int marks;
    cin >> marks;
    if (marks >= 90)
        cout << "Grade A";
    else if (marks >= 70)
        cout << "Grade B";
    else if (marks >= 50)
        cout << "Grade C";
    else if (marks >= 35)
        cout << "Grade D";
    else
        cout << "Fail";
}


Q4. Given the integer day denoting the day number, print on the screen which day of the week it is. 
Week starts from Monday and for values greater than 7 or less than 1, print Invalid. 
Ensure only the 1st letter of the answer is capitalised.

python---
day = int(input())
if day == 1:
    print("Monday")
elif day == 2:
    print("Tuesday")
elif day == 3:
    print("Wednesday")
elif day == 4:
    print("Thursday")
elif day == 5:
    print("Friday")
elif day == 6:
    print("Saturday")
elif day == 7:
    print("Sunday")
else:
    print("Invalid")


c++ ----
#include <iostream>
using namespace std;
int main() {
    int day;
    cin >> day;
    if (day == 1)
        cout << "Monday";
    else if (day == 2)
        cout << "Tuesday";
    else if (day == 3)
        cout << "Wednesday";
    else if (day == 4)
        cout << "Thursday";
    else if (day == 5)
        cout << "Friday";
    else if (day == 6)
        cout << "Saturday";
    else if (day == 7)
        cout << "Sunday";
    else
        cout << "Invalid";
}


Q5. Given an integer array nums, return the sum of the 1st and last element of the array.
 c++ language ----
#include <iostream>
using namespace std;
int main() {
    int n;
    cin >> n;
    int first, last, x;
    cin >> first;
    for (int i = 1; i < n; i++) cin >> x, last = x;
    cout << first + last;
}


Q6. Given two integers X and N, print the value X on the screen N times. Move to the next line after printing, even if N = 0
Python ----
X, N = map(int, input().split())
for i in range(N):
    print(X, end=" ")
print()
c++ ----
#include <iostream>
using namespace std;
int main() {
    int X, N;
    cin >> X >> N;
    for (int i = 0; i < N; i++) cout << X << " ";
    cout << endl;
}



Q7. Given a string s. Return the last character of the given string s.

python -----
s = input()
print(s[-1])

c++ -----
#include <iostream>
#include <string>
using namespace std;
int main() {
    string s;
    cin >> s;
    cout << s[s.length() - 1];
}


Q8. Given an array of integers nums, 
sort the array in non-decreasing order using the selection sort algorithm and return the sorted array.
A sorted array in non-decreasing order is an array where 
each element is greater than or equal to all previous elements in the array.

c++ -----
#include <iostream>
using namespace std;
int main() {
    int n;
    cin >> n;
    int a[100];
    for (int i = 0; i < n; i++) cin >> a[i];
    for (int i = 0; i < n - 1; i++) {
        int m = i;
        for (int j = i + 1; j < n; j++)
            if (a[j] < a[m]) m = j;
        swap(a[i], a[m]);
    }
    for (int i = 0; i < n; i++) cout << a[i] << " ";
}

python----
n = int(input())
a = []
for i in range(n):
    a.append(int(input()))
for i in range(n):
    m = i
    for j in range(i+1, n):
        if a[j] < a[m]:
            m = j
    a[i], a[m] = a[m], a[i]
for x in a:
    print(x, end=" ")


Q9. Given an integer n, write a function to print all numbers from 1 to n (inclusive) using recursion.
You must not use any loops such as for, while, or do-while.
The function should print each number on a separate line, in increasing order from 1 to n

python----

def print_numbers(n):
    if n == 0:
        return
    print_numbers(n - 1)
    print(n)
n = int(input())
print_numbers(n)

c++ -----

#include <iostream>
using namespace std;
void print_numbers(int n) {
    if (n == 0) return;
    print_numbers(n - 1);
    cout << n << endl;
}
int main() {
    int n;
    cin >> n;
    print_numbers(n);
}

Q 10. Given an integer N, return the sum of first N natural numbers. Try to solve this using recursion.

python-----
def sum_natural(n):
    if n == 0:
        return 0
    return n + sum_natural(n - 1)
N = int(input())
print(sum_natural(N))


c++-----
#include <iostream>
using namespace std;
int sum_natural(int n) {
    if (n == 0) return 0;
    return n + sum_natural(n - 1);
}
int main() {
    int N;
    cin >> N;
    cout << sum_natural(N);
}

Q11. Given an array arr of n elements. The task is to reverse the given array. 
The reversal of array should be inplace.

c++ -----
#include <iostream>
using namespace std;
int main() {
    int n;
    cin >> n;
    int arr[100];
    for (int i = 0; i < n; i++) cin >> arr[i];
    for (int i = 0; i < n / 2; i++) {
        int temp = arr[i];
        arr[i] = arr[n - i - 1];
        arr[n - i - 1] = temp;
    }
    for (int i = 0; i < n; i++) cout << arr[i] << " ";
}

Q12. The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence,
such that each number is the sum of the two preceding ones, starting from 0 and 1. T

python -----
def fib(n):
    if n == 0:
        return 0
    if n == 1:
        return 1
    return fib(n - 1) + fib(n - 2)

n = int(input())
print(fib(n))

c++ ------
#include <iostream>
using namespace std;
int fib(int n) {
    if (n == 0) return 0;
    if (n == 1) return 1;
    return fib(n - 1) + fib(n - 2);
}
int main() {
    int n;
    cin >> n;
    cout << fib(n);
}


Q13. You are given an integer n. You need to return the number of digits in the number.
The number will have no leading zeroes, except when the number is 0 itself.

python-----
n = int(input())
count = 0
if n == 0:
    count = 1
else:
    if n < 0:
        n = -n
    while n > 0:
        count += 1
        n //= 10
print(count)


Q14. You are given an integer n. Return the integer formed by placing the digits of n in reverse order.

python-----
n = int(input())
rev = 0
neg = n < 0
if neg:
    n = -n
while n > 0:
    rev = rev * 10 + n % 10
    n //= 10
if neg:
    rev = -rev
print(rev)

Q15. You are given an integer n. You need to check whether the number is a palindrome number or not. 
Return true if it's a palindrome number, otherwise return false.

python-----
n = int(input())
s = str(n)
if s == s[::-1]:
    print(True)
else:
    print(False)











